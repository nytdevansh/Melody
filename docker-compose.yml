version: '3.8'

services:
  melody-backend:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - B2_KEY_ID=${B2_KEY_ID}
      - B2_APPLICATION_KEY=${B2_APPLICATION_KEY}
      - B2_BUCKET_ID=${B2_BUCKET_ID}
      - B2_BUCKET_NAME=${B2_BUCKET_NAME}
      - CDN_DOMAIN=${CDN_DOMAIN}
      - DATABASE_URL=${DATABASE_URL:-}
      - DB_USER=${DB_USER:-sa}
      - DB_PASSWORD=${DB_PASSWORD:-}
    volumes:
      - ./logs:/app/logs
    depends_on:
      - postgres
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=melody
      - POSTGRES_USER=melody_user
      - POSTGRES_PASSWORD=melody_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Optional: Redis for caching (future use)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/ssl
    depends_on:
      - melody-backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: